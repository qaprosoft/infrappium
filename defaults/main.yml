---
#https://androidsdkoffline.blogspot.com/p/android-sdk-tools.html
android_sdk_download_location: https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz
android_sdk_install_location: /opt/android-sdk-linux
android_build_tools: build-tools-29.0.3
android_sdk_versions:
  - 22
  - 23
  - 24
  - 25
  - 26
  - 27
  - 28
  - 29
  - 30
android_emulator_skins:
  - HVGA
  - QVGA
  - WQVGA400
  - WQVGA432
  - WSVGA
  - WVGA800
  - WVGA854
  - WXGA720
  - WXGA800
  - WXGA800-7in
android_device_types:
  - Tablet
  - Phone
android_device_versions:
  - 5.1.1
  - 6.0.1
  - 6.0
  - 6.0.1
  - 7.0
  - 7.1.2
  - 8.0
  - 8.1
  - 9.0
  - 10.0
  - 11.0

docker_device_image_name: android-device
android_device_image_version: 1.0-beta1
docker_base_emulator_image_name: appium-emulator
docker_tmp_images_path: /tmp


# IMPORTANT: every time you upgrade appium version please make sure to patch manually
# PATCH #1: <appium>/node_modules/appium-adb/build/lib/tools/adb-commands.js to fix pidof identification on screenrecord
# for 1.19.0 replace 678 and 681 lines using below
# 678 line:
#    const shellCommand = this._isPgrepAvailable ? this._canPgrepUseFullCmdLineSearch ? ['pgrep', '-f', _lodash.default.escapeRegExp(`([[:blank:]]|^)${name}([[:blank:]]|$)`)] : [`pgrep ^${_lodash.default.escapeRegExp(name.slice(-MAX_PGREP_PATTERN_LEN))}$ || pgrep ^${_lodash.default.escapeRegExp(name.slice(0, MAX_PGREP_PATTERN_LEN))}$`] : ['pidof', name];
#updated one:
#    const shellCommand = this._isPgrepAvailable ? this._canPgrepUseFullCmdLineSearch ? ['pgrep', '-f', _lodash.default.escapeRegExp(`([[:blank:]]|^)${name}([[:blank:]]|$)`)] : [`pgrep ^${_lodash.default.escapeRegExp(name.slice(-MAX_PGREP_PATTERN_LEN))}$ || pgrep ^${_lodash.default.escapeRegExp(name.slice(0, MAX_PGREP_PATTERN_LEN))}$`] : ['pgrep', name];
#
# 681 line:
#      return (await this.shell(shellCommand)).split(/\s+/).map(x => parseInt(x, 10)).filter(x => _lodash.default.isInteger(x));
# updated one:
#      return (await this.shell(shellCommand)).split(" 5037")[0].split(/\s+/).map(x => parseInt(x, 10)).filter(x => _lodash.default.isInteger(x));

# PATCH #2 <appium>/node_modules/appium/node_modules/appium-base-driver/build/lib/protocol/protocol.js to return to carina "DEBUG info" about problematic step
# after 303 line add one more to update err.message
#       let actualErr = err;
#      err.message = `[[[DEBUG info: ${err.message} --udid ${process.env.DEVICEUDID} --name ${process.env.DEVICENAME}]]]`;

appium_install_location: /opt/appium/1.19.0
appium_version: 1.19.0

opencv_install_location: /opt
opencv_version: 4.15.0

selenoid_session_timeout_sec: 300
selenoid_port: 4445

grid_router_location: /etc/grid-router
grid_router_users:
  - { login: user1, password: user1 }
  - { login: user2, password: user2 }

selenium_hub_port: 4444

nginx_home: /opt/nginx
ssl_crt: ssl.crt
ssl_key: ssl.key

# to fix "FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory" during video recording
max_old_space_size_value: 8172
